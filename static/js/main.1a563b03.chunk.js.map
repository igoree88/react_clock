{"version":3,"sources":["Components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","timerId","this","setInterval","date","Date","setState","toLocaleTimeString","console","log","prevProps","color","props","clearInterval","className","style","React","Component","arrOfColors","App","isClockVisible","timerColor","type","onClick","Math","floor","random","length","ReactDOM","render","document","getElementById"],"mappings":"sPAWaA,EAAb,4MACEC,MAAe,CACbC,KAAM,SAFV,EAKEC,aALF,yDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,aAAY,WACzB,IAAMC,EAAa,IAAIC,KAEvB,EAAKC,SAAS,CAAEN,KAAMI,EAAKG,uBAE3BC,QAAQC,IAAIL,EAAKG,wBAChB,OAdP,gCAiBE,SAAmBG,GACbA,EAAUC,QAAUT,KAAKU,MAAMD,OAEjCH,QAAQC,IAAR,qCAA0CC,EAAUC,MAApD,eAAgET,KAAKU,MAAMD,UApBjF,kCAwBE,WACMT,KAAKD,SACPY,cAAcX,KAAKD,WA1BzB,oBA8BE,WACE,IAAQD,EAASE,KAAKH,MAAdC,KACAW,EAAUT,KAAKU,MAAfD,MAER,OACE,sBAAKG,UAAU,QAAf,UACE,mBAAGA,UAAU,cAAb,2BACA,qBACEA,UAAU,eACVC,MAAO,CAAEJ,SAFX,SAIIX,WAzCZ,GAA2BgB,IAAMC,WCC3BC,EAAc,CAClB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGIC,E,4MACJpB,MAAe,CACbqB,gBAAgB,EAChBC,WAAY,O,4CAGd,WAAU,IAAD,OACCD,EAAmBlB,KAAKH,MAAxBqB,eAER,OAEE,qBAAKN,UAAU,MAAf,SACE,sBAAKA,UAAU,yBAAf,UACE,6CACA,qBAAK,UAAQ,OAAOA,UAAU,QAA9B,SACGM,GACC,qBAAKN,UAAU,cAAf,SACE,cAAC,EAAD,CAAOH,MAAOT,KAAKH,MAAMsB,iBAI/B,sBAAKP,UAAU,wBAAf,UACE,wBACEA,UAAU,6BACVQ,KAAK,SACLC,QACE,kBAAM,EAAKjB,SAAS,CAAEc,gBAAgB,KAJ1C,uBAUA,wBACEN,UAAU,6BACVQ,KAAK,SACLC,QACE,kBAAM,EAAKjB,SAAS,CAAEc,gBAAgB,KAJ1C,uBAUA,wBACEN,UAAU,6BACVQ,KAAK,SACLC,QACE,kBAAM,EAAKjB,SACT,CACEe,WAAYH,EAAYM,KAAKC,MAAMD,KAAKE,SACtCR,EAAYS,YAPtB,0C,GA1CMX,IAAMC,WA+DTE,ICpFfS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1a563b03.chunk.js","sourcesContent":["import React from 'react';\nimport './Clock.scss';\n\ntype State = {\n  time: string;\n};\n\ntype Props = {\n  color: string;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    time: 'START',\n  };\n\n  timerId?: NodeJS.Timer;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      const date: Date = new Date();\n\n      this.setState({ time: date.toLocaleTimeString() });\n      // eslint-disable-next-line\n      console.log(date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.color !== this.props.color) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was recolor from ${prevProps.color} to ${this.props.color}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    const { time } = this.state;\n    const { color } = this.props;\n\n    return (\n      <div className=\"clock\">\n        <p className=\"clock__text\">Current time:</p>\n        <div\n          className=\"clock__timer\"\n          style={{ color }}\n        >\n          { time }\n        </div>\n      </div>\n\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Components';\n\ntype State = {\n  isClockVisible: boolean,\n  timerColor: string,\n};\n\ntype Props = {\n\n};\nconst arrOfColors = [\n  '#25a5db',\n  '#261ac9',\n  '#940d69',\n  '#1bd170',\n  '#e1f00e',\n  '#f00ed5',\n  '#b30c25',\n  '#54c2c4',\n  '#5adb46',\n  '#6f31a8',\n];\n\nclass App extends React.Component<Props, State> {\n  state: State = {\n    isClockVisible: true,\n    timerColor: 'red',\n  };\n\n  render() {\n    const { isClockVisible } = this.state;\n\n    return (\n\n      <div className=\"app\">\n        <div className=\"app__conteiner content\">\n          <h1>React clock</h1>\n          <div data-cy=\"time\" className=\"timer\">\n            {isClockVisible && (\n              <div className=\"App__clolck\">\n                <Clock color={this.state.timerColor} />\n              </div>\n            )}\n          </div>\n          <div className=\"app__buttonsConteiner\">\n            <button\n              className=\"button is-link is-outlined\"\n              type=\"button\"\n              onClick={\n                () => this.setState({ isClockVisible: true })\n              }\n            >\n              Show time\n            </button>\n\n            <button\n              className=\"button is-link is-outlined\"\n              type=\"button\"\n              onClick={\n                () => this.setState({ isClockVisible: false })\n              }\n            >\n              Hide time\n            </button>\n\n            <button\n              className=\"button is-link is-outlined\"\n              type=\"button\"\n              onClick={\n                () => this.setState(\n                  {\n                    timerColor: arrOfColors[Math.floor(Math.random()\n                    * arrOfColors.length)],\n                  },\n                )\n              }\n            >\n              Set random color\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import 'bulma/css/bulma.min.css';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}